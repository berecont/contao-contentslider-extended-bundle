{# Content-Slider extended (berecont) – sicher bei mehreren Instanzen #}
{% extends "@Contao/content_element/_base.html.twig" %}
{% use "@Contao/component/_stylesheet.html.twig" %}

{# Erkennen, ob wir in 5.6+ sind (data-settings vorhanden) #}
{% set is_v56 = (slider_settings is defined) %}

{% block content %}
    {# Slider-Attribute vorbereiten – getrennte Pfade für 5.6 und 5.3 #}
    {% if is_v56 %}
        {% set slider_attributes = attrs()
            .addClass('swiper' ~ (data.sliderInitClass ? ' ' ~ data.sliderInitClass : ''))
            .set('data-settings', slider_settings|json_encode)
            .setIfExists('data-berecont-breakpoints', (data.sliderBreakpoints is defined and data.sliderBreakpoints is not empty) ? data.sliderBreakpoints : null)
            .setIfExists('data-berecont-user', (data.sliderCustomOptions is defined and data.sliderCustomOptions is not empty) ? data.sliderCustomOptions : null)
            .setIfExists('data-berecont-pause-hover', data.sliderStopAutoplay ? '1' : null)
            .mergeWith(slider_attributes|default)
        %}
    {% else %}
        {# 5.3: delay/speed/offset/loop werden noch als Attribute benötigt #}
        {% set slider_attributes = attrs()
            .addClass('swiper' ~ (data.sliderInitClass ? ' ' ~ data.sliderInitClass : ''))
            .set('data-delay', delay)
            .set('data-speed', speed)
            .set('data-offset', offset)
            .set('data-loop', loop)
            .setIfExists('data-berecont-breakpoints', (data.sliderBreakpoints is defined and data.sliderBreakpoints is not empty) ? data.sliderBreakpoints : null)
            .setIfExists('data-berecont-user', (data.sliderCustomOptions is defined and data.sliderCustomOptions is not empty) ? data.sliderCustomOptions : null)
            .setIfExists('data-berecont-pause-hover', data.sliderStopAutoplay ? '1' : null)
            .mergeWith(slider_attributes|default)
        %}
    {% endif %}

    <div{{ slider_attributes }}>
        {% set slider_wrapper_attributes = attrs()
            .addClass('swiper-wrapper')
            .mergeWith(slider_wrapper_attributes|default)
        %}
        <div{{ slider_wrapper_attributes }}>
            {% block slides %}
                {% for element in nested_fragments %}
                    {% block slide %}
                        {% set slide_attributes = attrs()
                            .addClass('swiper-slide')
                            .mergeWith(slide_attributes|default)
                        %}
                        <div{{ slide_attributes }}>
                            {% block slide_inner %}
                                {{ content_element(element) }}
                            {% endblock %}
                        </div>
                    {% endblock %}
                {% endfor %}
            {% endblock %}
        </div>

        {% block controls %}
            {% if not as_editor_view %}
                {% if not data.sliderHideNavigation %}
                    {% set button_prev_attributes = attrs()
                        .set('type', 'button')
                        .addClass('swiper-button-prev')
                        .mergeWith(button_prev_attributes|default)
                    %}
                    <button{{ button_prev_attributes }}></button>

                    {% set button_next_attributes = attrs()
                        .set('type', 'button')
                        .addClass('swiper-button-next')
                        .mergeWith(button_next_attributes|default)
                    %}
                    <button{{ button_next_attributes }}></button>
                {% endif %}

                {% if not data.sliderHidePagination %}
                    {% set pagination_attributes = attrs()
                        .addClass('swiper-pagination')
                        .mergeWith(pagination_attributes|default)
                    %}
                    <div{{ pagination_attributes }}></div>
                {% endif %}
            {% endif %}
        {% endblock %}
    </div>
{% endblock %}

{% block script %}
    {# 1) Swiper-Library nur EINMAL einbinden #}
    {% add "berecont_swiper_lib" to body %}
        <script src="{{ asset('js/swiper-bundle.min.js', 'contao-components/swiper') }}"></script>
    {% endadd %}

    {# 2) Initializer nur EINMAL registrieren (Guard) #}
    {% add "berecont_swiper_init" to body %}
        {% set script_attributes = attrs()
            .setIfExists('nonce', csp_nonce('script-src'))
        %}
        <script{{ script_attributes }}>
            (function () {
                if (window.__berecontSwiperInit) return;
                window.__berecontSwiperInit = true;

                const parseJSON = (s) => { try { return JSON.parse(s); } catch(e) { return null; } };
                const parseFragment = (frag) => {
                    if (!frag) return {};
                    try { return (new Function('return ({' + frag + '});'))(); } catch(e) { return {}; }
                };

                const initEl = (el) => {
                    if (!el || el.dataset.berecontInitialized === '1' || el.swiper) return;

                    // 5.6+: bevorzugt data-settings (JSON)
                    let opts = {};
                    const settingsAttr = el.getAttribute('data-settings');
                    if (settingsAttr) {
                        const o = parseJSON(settingsAttr);
                        if (o && typeof o === 'object') opts = o;

                        if (el.getAttribute('data-berecont-pause-hover') === '1') {
                            if (opts.autoplay && typeof opts.autoplay === 'object') {
                                opts.autoplay.pauseOnMouseEnter = true;
                            }
                        }
                    } else {
                        // 5.3-Fallback
                        const speed = parseInt(el.getAttribute('data-speed') || '0', 10);
                        const initialSlide = parseInt(el.getAttribute('data-offset') || '0', 10);
                        const loop = el.hasAttribute('data-loop');
                        const delay = parseInt(el.getAttribute('data-delay') || '0', 10);
                        if (speed > 0) opts.speed = speed;
                        if (initialSlide > 0) opts.initialSlide = initialSlide;
                        if (loop) opts.loop = true;
                        if (delay > 0) {
                            opts.autoplay = {
                                delay: delay,
                                pauseOnMouseEnter: el.getAttribute('data-berecont-pause-hover') === '1'
                            };
                        }
                    }

                    // Basis-Optionen – ALLES pro Element scopen!
                    const base = {};
                    const pag = el.querySelector('.swiper-pagination');
                    if (pag) base.pagination = { el: pag, clickable: true };
                    const prev = el.querySelector('.swiper-button-prev');
                    const next = el.querySelector('.swiper-button-next');
                    if (prev && next) base.navigation = { prevEl: prev, nextEl: next };

                    // Breakpoints (JSON im Attribut)
                    const bpAttr = el.getAttribute('data-berecont-breakpoints');
                    if (bpAttr) {
                        const bp = parseJSON(bpAttr);
                        if (bp && typeof bp === 'object') base.breakpoints = bp;
                    }

                    // Benutzer-Fragment (JS-Objekt-Fragment, z. B. "spaceBetween: 24, effect: 'fade'")
                    const user = parseFragment(el.getAttribute('data-berecont-user'));

                    // Finale Optionen: base < core/5.6 < user
                    const finalOpts = Object.assign({}, opts, base, user);

                    // Init
                    new Swiper(el, finalOpts);
                    el.dataset.berecontInitialized = '1';
                };

                // Alle vorhandenen Slider initialisieren
                document.querySelectorAll('.swiper').forEach(initEl);

                // Optional: auch dynamisch nachgeladene Slider initialisieren
                const mo = new MutationObserver((muts) => {
                    muts.forEach(m => {
                        m.addedNodes.forEach(node => {
                            if (!(node instanceof Element)) return;
                            if (node.matches && node.matches('.swiper')) initEl(node);
                            if (node.querySelectorAll) node.querySelectorAll('.swiper').forEach(initEl);
                        });
                    });
                });
                mo.observe(document.documentElement, { childList: true, subtree: true });
            })();
        </script>
    {% endadd %}
{% endblock %}

{% block style %}
    {% add "swiper_css" to stylesheets %}
        {% with {file: swiper_css_file|default(asset('css/swiper-bundle.min.css', 'contao-components/swiper'))} %}
            {{ block('stylesheet_component') }}
        {% endwith %}
    {% endadd %}
{% endblock %}